{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ozhang/personal_projects/vibecoding/travel_map/src/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { APIProvider } from \"@vis.gl/react-google-maps\";\r\nimport Map from \"@/components/map\";\r\nimport Sidebar from \"@/components/sidebar\";\r\n\r\nexport interface Location {\r\n  id: string;\r\n  name: string;\r\n  lat: number;\r\n  lng: number;\r\n  category: string;\r\n  notes: string;\r\n  dateVisited: string;\r\n  rating: number;\r\n}\r\n\r\nconst LOCATION_STORAGE_KEY = \"visited_locations\";\r\n\r\nexport default function Home() {\r\n  const [locations, setLocations] = useState<Location[]>([]);\r\n  const [selectedLocation, setSelectedLocation] = useState<Location | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Load locations from localStorage on initial render\r\n  useEffect(() => {\r\n    try {\r\n      const savedLocations = localStorage.getItem(LOCATION_STORAGE_KEY);\r\n      if (savedLocations) {\r\n        const parsedLocations = JSON.parse(savedLocations);\r\n        // Migrate old locations to new format\r\n        const migratedLocations = parsedLocations.map((location: Partial<Location>, index: number) => ({\r\n          id: location.id || `location-${index}`,\r\n          name: location.name,\r\n          lat: location.lat,\r\n          lng: location.lng,\r\n          category: location.category || \"Other\",\r\n          notes: location.notes || \"\",\r\n          dateVisited: location.dateVisited || new Date().toISOString().split('T')[0],\r\n          rating: location.rating || 3\r\n        }));\r\n        setLocations(migratedLocations);\r\n      }\r\n    } catch (err) {\r\n      setError(\"Failed to load saved locations\");\r\n      console.error(\"Error loading locations:\", err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Save locations to localStorage whenever they change\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      try {\r\n        localStorage.setItem(LOCATION_STORAGE_KEY, JSON.stringify(locations));\r\n      } catch (err) {\r\n        setError(\"Failed to save locations\");\r\n        console.error(\"Error saving locations:\", err);\r\n      }\r\n    }\r\n  }, [locations, isLoading]);\r\n\r\n  const addLocation = (locationData: Omit<Location, 'id'>) => {\r\n    const newLocation: Location = {\r\n      ...locationData,\r\n      id: `location-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\r\n    };\r\n    const newLocations = [...locations, newLocation];\r\n    setLocations(newLocations);\r\n    setSelectedLocation(newLocation);\r\n  };\r\n\r\n  const updateLocation = (id: string, updates: Partial<Location>) => {\r\n    setLocations(locations.map(loc => \r\n      loc.id === id ? { ...loc, ...updates } : loc\r\n    ));\r\n  };\r\n\r\n  const deleteLocation = (id: string) => {\r\n    const newLocations = locations.filter(loc => loc.id !== id);\r\n    setLocations(newLocations);\r\n    if (selectedLocation?.id === id) {\r\n      setSelectedLocation(null);\r\n    }\r\n  };\r\n\r\n  const onDeselectLocation = () => {\r\n    setSelectedLocation(null);\r\n  };\r\n\r\n  const exportLocations = () => {\r\n    const dataStr = JSON.stringify(locations, null, 2);\r\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n    const exportFileDefaultName = `travel-map-locations-${new Date().toISOString().split('T')[0]}.json`;\r\n    \r\n    const linkElement = document.createElement('a');\r\n    linkElement.setAttribute('href', dataUri);\r\n    linkElement.setAttribute('download', exportFileDefaultName);\r\n    linkElement.click();\r\n  };\r\n\r\n  const importLocations = (file: File) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      try {\r\n        const importedLocations = JSON.parse(e.target?.result as string);\r\n        if (Array.isArray(importedLocations)) {\r\n          setLocations(importedLocations);\r\n          setError(null);\r\n        } else {\r\n          setError(\"Invalid file format\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Failed to import locations\");\r\n        console.error(\"Error importing locations:\", err);\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen bg-gray-50\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading your travel map...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <APIProvider apiKey={process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY!}>\r\n      <div className=\"flex h-screen font-sans bg-gray-50\">\r\n        {error && (\r\n          <div className=\"absolute top-4 right-4 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg z-50\">\r\n            {error}\r\n            <button \r\n              onClick={() => setError(null)}\r\n              className=\"ml-2 hover:bg-red-600 px-2 py-1 rounded\"\r\n            >\r\n              Ã—\r\n            </button>\r\n          </div>\r\n        )}\r\n        <Sidebar\r\n          locations={locations}\r\n          onAddLocation={addLocation}\r\n          onUpdateLocation={updateLocation}\r\n          onDeleteLocation={deleteLocation}\r\n          onSelectLocation={setSelectedLocation}\r\n          onExportLocations={exportLocations}\r\n          onImportLocations={importLocations}\r\n        />\r\n        <Map locations={locations} selectedLocation={selectedLocation} onDeselectLocation={onDeselectLocation} />\r\n      </div>\r\n    </APIProvider>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}